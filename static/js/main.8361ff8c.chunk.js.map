{"version":3,"sources":["components/background.js","components/body.js","components/card.js","components/color-picker.js","components/hex-input.js","utils/color.js","components/color-fieldset.js","components/footer.js","components/heading.js","components/text-example.js","components/results-group.js","app.js","report-web-vitals.js","index.js"],"names":["Background","backgroundColor","foregroundColor","className","height","width","id","x","y","in","stdDeviation","x1","y1","x2","y2","gradientUnits","offset","stopColor","cx","cy","r","fx","fy","spreadMethod","fill","Body","style","color","Card","actions","children","label","useState","isMinimized","setIsMinimized","componentClass","classNames","icon","faTimes","onClick","faMinus","faSort","length","map","type","ColorPicker","onChange","value","htmlFor","faEyeDropper","HexInput","hasError","hexValue","helpTextClass","maxLength","required","size","convertHexToRgb","hexString","result","exec","parseInt","g","b","calculateLuminance","rgbColor","a","v","Math","pow","ColorFieldset","updateHexValue","userInputValue","setUserInputValue","setHasError","baseClass","legendClass","labelClass","inputClass","rowClass","lightnessGradientClass","legendText","startCase","hexId","pickerId","lightnessId","rgbValue","hslValue","rgbObject","segment","shift","scaledRed","scaledGreen","scaledBlue","orderedColors","sortBy","min","max","chroma","luminosity","hue","saturation","abs","h","s","l","convertRgbToHsl","e","target","rgbSum","sum","values","background","newLuminosity","newHexValue","hexObject","forEach","key","toString","generateHexString","convertRgbToHex","hslObject","scaledHue","scaledSaturation","scaledLuminosity","secondary","lightness","round","convertHslToRgb","step","Footer","textShadow","href","rel","Heading","TextExample","textExampleClass","ResultsGroup","props","aaThreshold","aaaThreshold","backgroundHexValue","contrastRatio","foregroundHexValue","ResultsGroupAssessmentText","hasPassingScore","App","setForegroundHexValue","setBackgroundHexValue","valuesArray","orderedLuminances","toFixed","calculateContrastRatio","faExchangeAlt","preventDefault","onSubmit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8361ff8c.chunk.js","sourcesContent":["\nimport './background.scss';\n\nexport default function Background({ backgroundColor = '#fff', foregroundColor = '#000' }) {\n  return (\n    <svg aria-hidden=\"true\" className=\"background\" height=\"100%\" width=\"100%\" id=\"background-gradient\">\n      <defs>\n        <filter id=\"blur\" x=\"0\" y=\"0\">\n          <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"20\" />\n        </filter>\n        <linearGradient\n          id=\"linear-gradient\"\n          x1=\"0%\"\n          y1=\"100%\"\n          x2=\"0%\"\n          y2=\"0%\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop offset=\"0%\" stopColor={foregroundColor} />\n          <stop offset=\"100%\" stopColor={backgroundColor} />\n        </linearGradient>\n        <radialGradient\n          id=\"radial-gradient\"\n          cx=\"50%\"\n          cy=\"50%\"\n          r=\"75%\"\n          fx=\"50%\"\n          fy=\"0\"\n          spreadMethod=\"pad\"\n        >\n          <stop offset=\"0%\" stopColor={backgroundColor} />\n          <stop offset=\"100%\" stopColor={foregroundColor} />\n        </radialGradient>\n      </defs>\n      <rect\n        className=\"background__radial-gradient\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        fill=\"url(#radial-gradient)\"\n      />\n      <rect\n        className=\"background__linear-gradient\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        fill=\"url(#linear-gradient)\"\n      />\n    </svg>\n  );\n}\n","\nimport './body.scss';\n\nexport default function Body({ backgroundColor = '#fff', foregroundColor = '#000' }) {\n  return (\n    <p className=\"body\" style={{ color: foregroundColor }}>\n      a color contrast tool\n    </p>\n  );\n}\n","\nimport { useState } from 'react';\nimport classNames from 'classnames';\nimport { map } from 'lodash';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport './card.scss';\n\n// @TODO: Add easter eggs when clicking on mock buttons\nexport default function Card({ actions = [], children, label = 'Color Contrast Tool' }) {\n  const [isMinimized, setIsMinimized] = useState(false);\n\n  const componentClass = classNames(\n    'card',\n    {\n      'card--minimized': isMinimized,\n    },\n  );\n\n  return (\n    <div className={componentClass}>\n      <div className=\"card__mock-bar\">\n        <div className=\"card__mock-buttons\">\n          <div className=\"card__mock-button card__mock-button--close\">\n            <FontAwesomeIcon className=\"card__icon\" icon={faTimes} />\n          </div>\n          <div className=\"card__mock-button card__mock-button--minimize\" onClick={() => setIsMinimized(true)}>\n            <FontAwesomeIcon className=\"card__icon\" icon={faMinus} />\n          </div>\n          <div className=\"card__mock-button card__mock-button--maximize\">\n            <FontAwesomeIcon className=\"card__icon\" icon={faSort} />\n          </div>\n        </div>\n        {actions.length && (\n          <div className=\"card__actions\">\n            {map(actions, ({ icon, label, onClick }) => (\n              <button className=\"card__action\" key={icon} onClick={onClick} type=\"button\">\n                {icon}\n              </button>\n            ))}\n          </div>\n        )}\n        <div className=\"card__label\">\n          Color Contrast Tool\n        </div>\n      </div>\n      <div className=\"card__content\">\n        {children}\n      </div>\n    </div>\n  );\n}\n","\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEyeDropper } from '@fortawesome/free-solid-svg-icons';\n\nimport './color-picker.scss';\n\n\nexport default function ColorPicker({ id, onChange, value }) {\n  return (\n    <div className=\"color-picker\">\n      <label className=\"color-picker__label\" htmlFor={id}>\n        <span className=\"sr-only\">Color Picker</span>\n      </label>\n      <input className=\"color-picker__input\" id={id} onChange={onChange} type=\"color\" value={value} />\n      <FontAwesomeIcon className=\"color-picker__icon\" icon={faEyeDropper} />\n    </div>\n  );\n}\n","\nimport classNames from 'classnames';\n\nimport './hex-input.scss';\n\n\nexport default function HexInput({ hasError, hexValue, id, onChange, value }) {\n\n  const helpTextClass = classNames(\n\t\t'hex-input__help-text',\n\t\t{ 'hex-input__help-text--active': hasError },\n\t);\n\n  return (\n    <div className=\"hex-input\">\n      <label className=\"hex-input__label sr-only\" htmlFor={id}>\n        Hex Value\n      </label>\n      <input\n        className=\"hex-input__input\"\n        id={id}\n        maxLength=\"7\"\n        onChange={onChange}\n        required\n        type=\"text\"\n        value={value}\n        size=\"7\"\n      />\n      <span className={helpTextClass}>\n        Enter valid hex value (Example: #ffffff)\n      </span>\n    </div>\n  );\n}\n","\nimport { forEach, map, sortBy } from 'lodash'; // @TODO: use lodash-es\n\nexport function calculateContrastRatio(valuesArray) {\n\tconst orderedLuminances = sortBy(map(valuesArray, calculateLuminance)),\n\t\t\t\tratio = (orderedLuminances[1] + 0.05) / (orderedLuminances[0] + 0.05);\n\n\treturn ratio.toFixed(2);\n}\n\n\nexport function convertHexToRgb(hexString) {\n\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hexString);\n\tif (!result) return null;\n\treturn {\n\t\tr: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16),\n\t};\n}\n\n\nexport function convertRgbToHex(rgbObject) {\n\tconst generateHexString = ({ r, g, b }) => (`#${r}${g}${b}`);\n\tconst hexObject = {};\n\n\tforEach(rgbObject, (rgbValue, key) => {\n\t\tlet hexValue = rgbValue.toString(16);\n\t\tif (hexValue.length === 1) {\n\t\t\thexValue = `0${hexValue}`;\n\t\t}\n\t\thexObject[key] = hexValue;\n\t});\n\n\treturn generateHexString(hexObject);\n}\n\n\nexport function convertRgbToHsl(rgbObject) { // https://stackoverflow.com/questions/39118528/rgb-to-hsl-conversion\n\tconst scaledRed = rgbObject.r / 255,\n\t\t\t\tscaledGreen = rgbObject.g / 255,\n\t\t\t\tscaledBlue = rgbObject.b / 255,\n\t\t\t\torderedColors = sortBy([scaledRed, scaledGreen, scaledBlue]),\n\t\t\t\tmin = orderedColors[0],\n\t\t\t\tmax = orderedColors[2],\n\t\t\t\tchroma = max - min,\n\t\t\t\tluminosity = (max + min) / 2;\n\n\tlet hue = 0,\n\t\t\tsaturation = 0,\n\t\t\tsegment,\n\t\t\tshift;\n\n\tif (chroma !== 0) {\n\t\tsaturation = chroma / (1 - Math.abs(2 * luminosity - 1));\n\t\tswitch(max) {\n\t\t\tcase scaledRed:\n\t\t\t\tsegment = (scaledGreen - scaledBlue) / chroma;\n\t\t\t\tshift = 0 / 60; // R° / (360° / hex sides)\n\t\t\t\tif (segment < 0) {  // hue > 180, full rotation\n\t\t\t\t\tshift = 360 / 60; // R° / (360° / hex sides)\n\t\t\t\t}\n\t\t\t\thue = segment + shift;\n\t\t\t\tbreak;\n\t\t\tcase scaledGreen:\n\t\t\t\tsegment = (scaledBlue - scaledRed) / chroma;\n\t\t\t\tshift = 120 / 60; // G° / (360° / hex sides)\n\t\t\t\thue = segment + shift\n\t\t\t\tbreak;\n\t\t\tcase scaledBlue:\n\t\t\t\tsegment = (scaledRed - scaledGreen) / chroma;\n\t\t\t\tshift = 240 / 60; // B° / (360° / hex sides)\n\t\t\t\thue = segment + shift\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {\n\t\th: hue * 60, // hue is in [0,6], scale it up...\n\t\ts: saturation * 100,\n\t\tl: luminosity * 100,\n\t};\n}\n\n\nexport function convertHslToRgb(hslObject) {\n\t// https://css-tricks.com/converting-color-spaces-in-javascript/\n\tconst hue = hslObject.h,\n\t\t\t\tscaledHue = hue / 60,\n\t\t\t\tscaledSaturation = hslObject.s / 100,\n\t\t\t\tscaledLuminosity = hslObject.l / 100;\n\n\tlet chroma = (1 - Math.abs(2 * scaledLuminosity - 1)) * scaledSaturation,\n\t\t\tsecondary = chroma * (1 - Math.abs(scaledHue % 2 - 1)),\n\t\t\tlightness = scaledLuminosity - chroma / 2,\n\t\t\tr = 0,\n\t\t\tg = 0,\n\t\t\tb = 0;\n\n\tif (0 <= hue && hue < 60) {\n    r = chroma;\n\t\tg = secondary;\n\t\tb = 0;\n  } else if (60 <= hue && hue < 120) {\n    r = secondary;\n\t\tg = chroma;\n\t\tb = 0;\n  } else if (120 <= hue && hue < 180) {\n    r = 0;\n\t\tg = chroma;\n\t\tb = secondary;\n  } else if (180 <= hue && hue < 240) {\n    r = 0;\n\t\tg = secondary;\n\t\tb = chroma;\n  } else if (240 <= hue && hue < 300) {\n    r = secondary;\n\t\tg = 0;\n\t\tb = chroma;\n  } else if (300 <= hue && hue < 360) {\n    r = chroma;\n\t\tg = 0;\n\t\tb = secondary;\n  }\n\n\treturn {\n\t\tr: Math.round((r + lightness) * 255),\n\t\tg: Math.round((g + lightness) * 255),\n\t\tb: Math.round((b + lightness) * 255),\n\t};\n}\n\n\nexport function calculateLuminance(hexString) {\n    const rgbColor = convertHexToRgb(hexString);\n    const r = rgbColor.r,\n\t\t\t\t\tg = rgbColor.g,\n\t\t\t\t\tb = rgbColor.b;\n\n    const a = [r, g, b].map(function(v) {\n        v /= 255;\n        return (v <= 0.03928) ?\n            v / 12.92 :\n            Math.pow(((v + 0.055) / 1.055), 2.4);\n    });\n\n    return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n};\n","\nimport { useState } from 'react';\nimport { startCase, sum, values } from 'lodash'; // @TODO: use lodash-es\n\n\nimport ColorPicker from './color-picker';\nimport HexInput from './hex-input';\nimport { convertHexToRgb, convertHslToRgb, convertRgbToHex, convertRgbToHsl } from '../utils/color';\n\nimport './color-fieldset.scss';\n\n\nexport default function ColorFieldset({ hexValue, updateHexValue, type }) {\n\tconst [userInputValue, setUserInputValue] = useState(hexValue);\n\n\tconst [hasError, setHasError] = useState(false);\n\t//\n\t// const textInputValue = useMemo(() => {\n\t// \tsetUserInputValue(hexValue);\n\t// }, [hexValue]);\n\n  const baseClass = 'color-fieldset';\n\tconst colorFieldsetClass = baseClass;\n\tconst legendClass = `${baseClass}__legend`;\n\tconst labelClass = `${baseClass}__label`;\n\tconst inputClass = `${baseClass}__input`;\n\tconst rowClass = `${baseClass}__row`;\n\tconst lightnessGradientClass = `${baseClass}__lightness-gradient`;\n\n\tconst legendText = startCase(type); // `${startCase(type)} Color`,\n  const hexId = `${type}-hex`;\n  const pickerId = `${type}-picker`;\n  const lightnessId = `${type}-lightness`;\n\n\tconst rgbValue = convertHexToRgb(hexValue);\n\tconst hslValue = convertRgbToHsl(rgbValue);\n\n\tconst onChange = e => {\n\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(e.target.value);\n\t\tsetUserInputValue(e.target.value);\n\t\tif (!result) setHasError(true);\n\t\tif (result) {\n\t\t\tsetHasError(false);\n\t\t\tupdateHexValue(e.target.value);\n\t\t}\n\t};\n\n\tconst rgbSum = sum(values(rgbValue));\n\n\tconst isBlack = rgbSum === 0;\n\tconst isWhite = rgbSum === (255 * 3);\n\tconst isColor = !isBlack && !isWhite;\n\n\tconst style = {\n\t\tbackground: `linear-gradient(\n\t\t\tto right,\n\t\t\trgb(0, 0, 0),\n\t\t\t${isColor ? `rgb(${rgbValue.r}, ${rgbValue.g}, ${rgbValue.b}),` : ''}\n\t\t\trgb(255, 255, 255)\n\t\t)`,\n\t};\n\n\tconst updateLightness = e => {\n\t\tconst newLuminosity = e.target.value,\n\t\t\t\t\tadjustedHslValue = {...hslValue, ...{ l: newLuminosity }},\n\t\t\t\t\tnewRgbValue = convertHslToRgb(adjustedHslValue),\n\t\t\t\t\tnewHexValue = convertRgbToHex(newRgbValue);\n\n\t\tupdateHexValue(newHexValue);\n\t}\n\n  return (\n    <fieldset className={colorFieldsetClass}>\n\t\t\t<legend className={legendClass}>{legendText}</legend>\n\t\t\t<div className={labelClass}>Color</div>\n\t\t\t<div className={rowClass}>\n\t\t\t\t<ColorPicker id={pickerId} onChange={onChange} value={hexValue} />\n\t\t\t\t<HexInput id={hexId} onChange={onChange} value={userInputValue} hasError={hasError} />\n\t\t\t</div>\n\n      <label className={labelClass} htmlFor={lightnessId}>Lightness</label>\n      <input className={inputClass} id={lightnessId} value={hslValue.l} min=\"0\" max=\"100\" onChange={updateLightness} step=\"1\" type=\"range\" />\n      <div className={lightnessGradientClass} style={style} />\n    </fieldset>\n  );\n}\n","\nimport './footer.scss';\n\n\nexport default function Footer({ backgroundColor, foregroundColor }) {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container\" style={{ color: backgroundColor, textShadow: `0.125rem 0.125rem 0 ${foregroundColor}` }}>\n        Created by{' '}\n        <a\n          className=\"footer__link\"\n          href=\"https://schylerhosler.com\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          style={{ color: backgroundColor }}\n        >\n          <span\n            className=\"footer__link-text footer-link-text--default\"\n            style={{ color: backgroundColor }}\n          >\n            Schyler Hosler\n          </span>\n          <span\n            aria-hidden\n            className=\"footer__link-text footer__link-text--highlighted\"\n            style={{ color: foregroundColor }}\n          >\n            Schyler Hosler\n          </span>\n          <span className=\"footer__link-highlight\" style={{ backgroundColor }}/>\n        </a>\n      </div>\n    </footer>\n  );\n}\n","\nimport './heading.scss';\n\nexport default function Heading({ backgroundColor = '#fff', foregroundColor = '#000' }) {\n  return (\n    <h1 className=\"heading\" style={{ color: foregroundColor }}>\n      iro-iro\n    </h1>\n  );\n}\n","\nimport classNames from 'classnames';\n\nimport './text-example.scss';\n\n\nexport default function TextExample({ backgroundColor, foregroundColor, type }) {\n\tconst baseClass = 'text-example',\n\t\t\t\ttextExampleClass = classNames(\n\t\t\t\t\tbaseClass,\n\t\t\t\t\t{ [`${baseClass}--${type}`]: type },\n\t\t\t\t),\n\n\t\t\t\tstyle = {\n\t\t\t\t\tbackgroundColor: backgroundColor,\n\t\t\t\t\tcolor: foregroundColor,\n\t\t\t\t};\n\n\treturn (\n\t\t<div className={textExampleClass} style={style}>\n\t\t\tThe quick brown fox jumps over the lazy dog\n\t\t</div>\n\t);\n}\n","\nimport classNames from 'classnames';\nimport { startCase } from 'lodash';\n\nimport TextExample from './text-example';\n\nimport './results-group.scss';\n\n\nexport default function ResultsGroup(props) {\n\tconst {\n\t\taaThreshold,\n\t\taaaThreshold,\n\t\tbackgroundHexValue,\n\t\tcontrastRatio,\n\t\tforegroundHexValue,\n\t\ttype,\n\t} = props;\n\n\treturn (\n\t\t<div className=\"results-group\">\n\t\t\t<div className=\"results-group__label\">\n\t\t\t\t{startCase(type)} Text\n\t\t\t</div>\n\t\t\t<div className=\"results-group__wcag\">\n        <div>\n          WCAG AA (≥ {aaThreshold}:1):{' '}\n          <ResultsGroupAssessmentText\n\t\t\t\t\t\thasPassingScore={contrastRatio >= aaThreshold}\n\t\t\t\t\t/>\n        </div>\n        <div>\n  \t\t\t\tWCAG AAA (≥ {aaaThreshold}:1):{' '}\n          <ResultsGroupAssessmentText\n\t\t\t\t\t\thasPassingScore={contrastRatio >= aaaThreshold}\n\t\t\t\t\t/>\n        </div>\n\t\t\t</div>\n\t\t\t<TextExample\n\t\t\t\t{...{\n\t\t\t\t\tbackgroundColor: backgroundHexValue,\n\t\t\t\t\tforegroundColor: foregroundHexValue,\n\t\t\t\t\ttype,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\n\nfunction ResultsGroupAssessmentText({ hasPassingScore }) {\n  const componentClass = classNames(\n    'results-group__assessment-text',\n    {\n      'results-group__assessment-text--pass': hasPassingScore,\n      'results-group__assessment-text--fail': !hasPassingScore,\n    },\n  )\n\n  return (\n    <strong className={componentClass}>\n      {hasPassingScore ? 'Pass' : 'Fail'}\n    </strong>\n  );\n}\n","\nimport { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport Background from './components/background';\nimport Body from './components/body';\nimport Card from './components/card';\nimport ColorFieldset from './components/color-fieldset';\nimport Footer from './components/footer';\nimport Heading from './components/heading';\nimport ResultsGroup from './components/results-group';\nimport { calculateContrastRatio } from './utils/color';\n\n\nexport default function App() {\n  const [foregroundHexValue, setForegroundHexValue] = useState('#e6e6e6'),\n        [backgroundHexValue, setBackgroundHexValue] = useState('#2e4d5e');\n\n  const swapHexValues = e => {\n    if (e) e.preventDefault();\n    setForegroundHexValue(backgroundHexValue);\n    setBackgroundHexValue(foregroundHexValue);\n  };\n\n  const contrastRatio = calculateContrastRatio([foregroundHexValue, backgroundHexValue]);\n\n  return (\n    <>\n      {/* <header></header> */}\n      <Background\n        backgroundColor={backgroundHexValue}\n        foregroundColor={foregroundHexValue}\n      />\n      <main>\n        <div className=\"container text-center\">\n          <Heading\n            backgroundColor={backgroundHexValue}\n            foregroundColor={foregroundHexValue}\n          />\n          <Body\n            backgroundColor={backgroundHexValue}\n            foregroundColor={foregroundHexValue}\n          />\n          <Card\n            actions={[{\n              icon: <FontAwesomeIcon icon={faExchangeAlt} />,\n              label: 'Swap colors',\n              onClick: swapHexValues,\n            }]}\n            label=\"Color Contrast Tool\">\n            <form onSubmit={e => e.preventDefault()}\n          >\n              <div className=\"card__section\">\n                <ColorFieldset\n                  hexValue={foregroundHexValue}\n                  updateHexValue={setForegroundHexValue}\n                  type=\"foreground\"\n                />\n              </div>\n              <div className=\"card__section\">\n                <ColorFieldset\n                  hexValue={backgroundHexValue}\n                  updateHexValue={setBackgroundHexValue}\n                  type=\"background\"\n                />\n              </div>\n            </form>\n            {/*\n            <h2 className=\"sr-only\">Results</h2>\n            <p className=\"contrast-ratio\" role=\"status\">\n              Contrast Ratio: <strong>{contrastRatio}</strong>:1\n            </p>\n            */}\n            <div className=\"card__section\">\n              <ResultsGroup\n                {...{\n                  aaThreshold: 4.5,\n                  aaaThreshold: 7.1,\n                  backgroundHexValue,\n                  contrastRatio,\n                  foregroundHexValue,\n                  type: 'normal'\n                }}\n              />\n            </div>\n            <div className=\"card__section\">\n              <ResultsGroup\n                {...{\n                  aaThreshold: 3.1,\n                  aaaThreshold: 4.5,\n                  backgroundHexValue,\n                  contrastRatio,\n                  foregroundHexValue,\n                  type: 'large'\n                }}\n              />\n            </div>\n          </Card>\n        </div>\n      </main>\n      <Footer backgroundColor={backgroundHexValue} foregroundColor={foregroundHexValue} />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './app';\nimport reportWebVitals from './report-web-vitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}